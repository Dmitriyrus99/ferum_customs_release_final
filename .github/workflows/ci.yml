name: CI                      # –ü–æ–∫–∞–∂–µ—Ç—Å—è –Ω–∞ –≤–∫–ª–∞–¥–∫–µ ¬´Actions¬ª
run-name: >-
  üõ†Ô∏è ${{ github.actor }} –∑–∞–ø—É—Å—Ç–∏–ª CI –¥–ª—è ${{ github.ref_name }}

on:
  push:
    branches: [main, develop]
  pull_request:
  workflow_dispatch:          # —Ä—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫ –∏–∑ UI
  schedule:
    - cron: '0 4 * * 1'       # –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –Ω–æ—á–Ω–æ–π –ø—Ä–æ–≥–æ–Ω (–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫, 04:00 UTC)

# –æ—Ç–º–µ–Ω—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –∑–∞–ø—É—Å–∫–∏, –µ—Å–ª–∏ –µ—Å—Ç—å –±–æ–ª–µ–µ —Å–≤–µ–∂–∏–π –∫–æ–º–º–∏—Ç –≤ —Ç–æ–π –∂–µ –≤–µ—Ç–∫–µ
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:                  # –º–∏–Ω–∏–º—É–º –ø—Ä–∞–≤ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  contents: read

jobs:
  # ---------- –õ–∏–Ω—Ç–µ—Ä—ã, —Ñ–æ—Ä–º–∞—Ç—Ç–µ—Ä—ã, —Ç–∏–ø–∏–∑–∞—Ü–∏—è ----------
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4          # –∫–ª–æ–Ω–∏—Ä—É–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # –∫—ç—à–∏—Ä—É–µ–º —Å–∫–∞—á–∞–Ω–Ω—ã–µ —Ö—É–∫–∏ pre-commit
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: ${{ runner.os }}-precommit-${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Install pre-commit
        run: pip install --upgrade pre-commit

      - name: Run pre-commit hooks (skip pytest)
        env:
          SKIP: pytest
        run: pre-commit run --all-files --show-diff-on-failure

  # ---------- –Æ–Ω–∏—Ç-—Ç–µ—Å—Ç—ã –≤–æ Frappe / Docker Compose ----------
  tests:
    needs: lint               # –≤—ã–ø–æ–ª–Ω—è–µ–º, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ª–∏–Ω—Ç–µ—Ä—ã –∑–µ–ª—ë–Ω—ã–µ
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v4

      - name: Build & start bench stack
        run: |
          docker compose -f docker-compose.yml \
            up -d --build --wait --wait-timeout 600

      - name: Run pytest inside backend
        # -T ‚ûú –±–µ–∑ TTY ‚Äî —á–∏—â–µ –ª–æ–≥–∏ –≤ CI
        run: docker compose exec -T backend pytest

      # (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ) —Å–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç—á—ë—Ç—ã, –µ—Å–ª–∏ –∏—Ö –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç–µ
      - name: Upload pytest report
        if: always()                                      # –¥–∞–∂–µ –ø—Ä–∏ –ø–∞–¥–µ–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤
        uses: actions/upload-artifact@v4
        with:
          name: pytest-report
          path: reports/

      - name: Stop stack
        if: always()
        run: docker compose down -v
