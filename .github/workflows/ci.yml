# .github/workflows/ci.yml

# –ò–º—è —Ä–∞–±–æ—á–µ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤ GitHub Actions
name: CI/CD Pipeline

# –î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –∏–º—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
run-name: >-
  üõ†Ô∏è ${{ github.actor }} –∑–∞–ø—É—Å—Ç–∏–ª CI –¥–ª—è –≤–µ—Ç–∫–∏ ${{ github.ref_name }}

# --- –¢–†–ò–ì–ì–ï–†–´ –ó–ê–ü–£–°–ö–ê ---
on:
  # –ü—Ä–∏ push –≤ –æ—Å–Ω–æ–≤–Ω—ã–µ –≤–µ—Ç–∫–∏
  push:
    branches: [main, develop]
  # –ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ Pull Request –≤ –æ—Å–Ω–æ–≤–Ω—ã–µ –≤–µ—Ç–∫–∏
  pull_request:
    branches: [main, develop]
  # –î–ª—è —Ä—É—á–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –∏–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ GitHub
  workflow_dispatch:
  # –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
  schedule:
    - cron: '0 4 * * 1' # –ö–∞–∂–¥—ã–π –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ –≤ 04:00 UTC

# --- –£–ü–†–ê–í–õ–ï–ù–ò–ï –ü–ê–†–ê–õ–õ–ï–õ–¨–ù–´–ú–ò –ó–ê–ü–£–°–ö–ê–ú–ò ---
# –û—Ç–º–µ–Ω—è–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –∑–∞–ø—É—Å–∫–∏ –¥–ª—è —Ç–æ–≥–æ –∂–µ PR –∏–ª–∏ –≤–µ—Ç–∫–∏ –ø—Ä–∏ –Ω–æ–≤–æ–º –∫–æ–º–º–∏—Ç–µ
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# --- –†–ê–ó–†–ï–®–ï–ù–ò–Ø ---
# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø—Ä–∞–≤–∞ –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
permissions:
  contents: read

jobs:
  # =======================================================
  #  –ó–ê–î–ê–ù–ò–ï 1: –ü–†–û–í–ï–†–ö–ê –ö–ê–ß–ï–°–¢–í–ê –ö–û–î–ê (–õ–ò–ù–¢–ï–†–´)
  # =======================================================
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 10 # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è

    steps:
      # –®–∞–≥ 1: –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞ –∏–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
      - name: Checkout repository
        uses: actions/checkout@v4

      # –®–∞–≥ 2: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è Python
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # –®–∞–≥ 3: –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Ö—É–∫–æ–≤ pre-commit –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö –∑–∞–ø—É—Å–∫–æ–≤
      - name: Cache pre-commit hooks
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: ${{ runner.os }}-precommit-${{ hashFiles('.pre-commit-config.yaml') }}

      # –®–∞–≥ 4: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–æ–∫
      - name: Install dependencies
        run: pip install --upgrade pre-commit

      # –®–∞–≥ 5: –ó–∞–ø—É—Å–∫ —Ö—É–∫–æ–≤ pre-commit, –ø—Ä–æ–ø—É—Å–∫–∞—è pytest
      # –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è SKIP - —ç—Ç–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Å–ø–æ—Å–æ–± pre-commit –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞ —Ö—É–∫–æ–≤.
      - name: Run pre-commit hooks (skip pytest)
        env:
          SKIP: pytest
        run: pre-commit run --all-files --show-diff-on-failure

  # =======================================================
  #  –ó–ê–î–ê–ù–ò–ï 2: –ò–ù–¢–ï–ì–†–ê–¶–ò–û–ù–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï
  # =======================================================
  tests:
    # –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è 'lint'
    needs: lint
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      # –®–∞–≥ 1: –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞
      - name: Checkout repository
        uses: actions/checkout@v4

      # –®–∞–≥ 2: –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ Docker-—Å—Ç–µ–∫–∞ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
      - name: Build and start Frappe Stack
        run: docker compose -f docker-compose.yml up -d --build

      # –®–∞–≥ 3: –û–∂–∏–¥–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–π –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–∞–π—Ç–∞ Frappe
      # –≠—Ç–æ—Ç —Ü–∏–∫–ª –æ–ø—Ä–∞—à–∏–≤–∞–µ—Ç API —Å–∞–π—Ç–∞, –ø–æ–∫–∞ –Ω–µ –ø–æ–ª—É—á–∏—Ç –æ—Ç–≤–µ—Ç 200 OK.
      - name: Wait for Frappe site to be ready
        run: |
          echo "Waiting for Frappe site to become available..."
          timeout=300 # –¢–∞–π–º–∞—É—Ç 5 –º–∏–Ω—É—Ç
          start_time=$(date +%s)
          # –ò–º—è —Å–∞–π—Ç–∞ –¥–æ–ª–∂–Ω–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏—é SITE_NAME –≤ docker-compose.yml
          SITE_HOST="http://localhost:8000"

          while true; do
            current_time=$(date +%s)
            elapsed=$((current_time - start_time))
            if [ $elapsed -ge $timeout ]; then
              echo "::error::Timeout: Site did not become ready in ${timeout} seconds."
              docker compose logs frappe # –í—ã–≤–æ–¥–∏–º –ª–æ–≥–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
              exit 1
            fi
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–º—É —ç–Ω–¥–ø–æ–∏–Ω—Ç—É Frappe
            status_code=$(curl -s -o /dev/null -w "%{http_code}" $SITE_HOST/api/method/ping || echo "000")
            
            if [ "$status_code" -eq 200 ]; then
              echo "Site is ready! Status code: $status_code."
              break
            else
              echo "Site not ready yet (status: $status_code). Retrying in 15 seconds..."
              sleep 15
            fi
          done

      # –®–∞–≥ 4: –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ pytest –≤–Ω—É—Ç—Ä–∏ —Ä–∞–±–æ—Ç–∞—é—â–µ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
      # –ò–º—è —Å–µ—Ä–≤–∏—Å–∞ 'frappe' –∏ –∏–º—è —Å–∞–π—Ç–∞ 'your-site-name' –≤–∑—è—Ç—ã –∏–∑ docker-compose.yml
      - name: Run tests inside container
        run: >
          docker compose exec -T frappe
          bench --site your-site-name run-tests --app ferum_customs

      # –®–∞–≥ 5 (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ): –ó–∞–≥—Ä—É–∑–∫–∞ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ (–æ—Ç—á–µ—Ç–æ–≤ –æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏)
      # –ï—Å–ª–∏ –≤–∞—à–∏ —Ç–µ—Å—Ç—ã –≥–µ–Ω–µ—Ä–∏—Ä—É—é—Ç –æ—Ç—á–µ—Ç—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ —Ñ–æ—Ä–º–∞—Ç–µ JUnit),
      # –≤—ã –º–æ–∂–µ—Ç–µ —Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å —ç—Ç–æ—Ç —à–∞–≥ –¥–ª—è –∏—Ö —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è.
      # - name: Upload test reports
      #   if: always() # –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤—Å–µ–≥–¥–∞, –¥–∞–∂–µ –µ—Å–ª–∏ —Ç–µ—Å—Ç—ã —É–ø–∞–ª–∏
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: pytest-reports
      #     path: ./reports # –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ –≤–∞—à–∏–º –æ—Ç—á–µ—Ç–∞–º

      # –®–∞–≥ 6: –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Ä–µ—Å—É—Ä—Å–æ–≤
      - name: Stop Frappe Stack
        if: always() # –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤—Å–µ–≥–¥–∞
        run: docker compose down -v

        if: always()
        run: docker compose down -v
